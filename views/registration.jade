extends layout

block head
    link(rel='stylesheet', href='bootstrapvalidator/css/bootstrapValidator.min.css')
    script(src='bootstrapvalidator/js/bootstrapValidator.min.js')
    script(type='text/javascript' src='js/zxcvbn-async.js')

block content
    .navbar.navbar-default
        .container
            .navbar-header
                span.glyphicon.glyphicon-headphones
                span  Songster
                h1(style='display: none') Songster
            .navbar-collapse.collapse.navbar-responsive-collapse
                ul.nav.navbar-nav.navbar-right
                    li
                        a(href='login')
                            span.glyphicon.glyphicon-user
                            span  Login
    .col-xs-12.col-sm-8.col-md-6.col-sm-offset-2.col-md-offset-3
        .blur
        .panel.panel-default
            .panel-heading
                h1.panel-title Registration
            .panel-body
                form(id="form-register" method="post")
                    .form-group
                        input.form-control(type='text', placeholder='Username', name='username', id='username')
                    .row
                        .col-xs-12.col-sm-6.col-md-6
                            .form-group
                                input.form-control(type="text", name="first_name", id="first_name" placeholder='First Name')
                        .col-xs-12.col-sm-6.col-md-6
                            .form-group
                                input.form-control(type="text", name="last_name", id="last_name" placeholder='Last Name')
                    .form-group
                        input.form-control(type="email", name="email", id="email", placeholder='E-Mail Address')
                    .row
                        .col-xs-12.col-sm-6.col-md-6
                            .form-group
                                input.form-control(type="password" name="password" id="password", placeholder='Password')
                        .col-xs-12.col-sm-6.col-md-6
                            .form-group
                                input.form-control(type="password" name="confirm_password" id="confirm_password", placeholder='Confirm Password')
                    span Password Strength:
                    .progress
                        .progress-bar.bar-custom(id='progressbar' role='progressbar' aria-valuenow='40' aria-valuemax='100' aria-valuemin='0' style='width: 0%' )
                            span
                    .form-group
                        button.form-control(type="submit" class='btn btn-custom' id='register') Register
                .alert.alert-danger(role='alert')
                    span.sr-only Error:
                    span(id='error_message') #{message}
                    script.
                        if($('#error_message').text() == "") {
                            $('.alert-danger').hide();
                        } else {
                            $('.alert-danger').show();
                        };

                        $('#password').keyup(function() {
                           var text = ['Horrible', 'Weak', 'Medium', 'Strong', 'Awesome'];
                           var color = ['#e74c3c', '#e74c3c', '#f39c12', '#f39c12','#00bc8c'];
                           var textcolor = ['black', 'black', 'white', 'white', 'white'];
                           var textValue = $(this).val();
                           var result = zxcvbn(textValue);
                           var bar = $('#progressbar');
                           bar.css('background-color', color[result.score]);
                           bar.css('color', textcolor[result.score]);
                           bar.css('text-align', 'center');
                           bar.find("span").text(text[result.score]);
                           bar.find("span").css('color', textcolor[result.score]);

                           // reset the bar if there is no password
                           if ($("#password").val() === "") {
                            bar.css('width', '0%');
                            bar.find("span").text('');
                           } else {
                            bar.css('width', 20+20*result.score + '%');
                           }
                        });

                        $(document).ready(function(){
                            $('#form-register').bootstrapValidator({
                                feedbackIcons: {
                                    valid: 'glyphicon glyphicon-ok',
                                    invalid: 'glyphicon glyphicon-remove',
                                    validating: 'glyphicon glyphicon-refresh'
                                },
                                live: 'enabled',
                                submitButtons: 'button[type=submit]',
                                fields: {
                                    username: {
                                        validators: {
                                            notEmpty: {
                                                message: 'The username is required'
                                            }
                                        }
                                    },
                                    first_name: {
                                        validators: {
                                            notEmpty: {
                                                message: 'The first name is required'
                                            }
                                        }
                                    },
                                    last_name: {
                                       validators: {
                                           notEmpty: {
                                               message: 'The last name is required'
                                           }
                                       }
                                   },
                                   email: {
                                      validators: {
                                          notEmpty: {
                                              message: 'The email address is required'
                                          },
                                          emailAddress: {
                                             message: 'The input is not a valid email address'
                                          }
                                      }
                                   },
                                   password: {
                                        validators: {
                                            notEmpty: {
                                                message: 'The password is required'
                                            },
                                            identical: {
                                                field: 'confirm_password',
                                                message: 'The password and its confirm are not the same'
                                            }
                                        }
                                    },
                                    confirm_password: {
                                       validators: {
                                           notEmpty: {
                                                message: 'The password is required'
                                            },
                                           identical: {
                                               field: 'password',
                                               message: 'The password and its confirm are not the same'
                                           }

                                       }
                                   }
                                }
                            });
                        });





